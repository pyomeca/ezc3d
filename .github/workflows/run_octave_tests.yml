name: Run the tests

on: [pull_request]

env:
  BUILD_FOLDER: build
  EXAMPLES_FOLDER: examples

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-20.04
            label: linux-64
            prefix: /usr/share/miniconda3/envs/biorbd_eigen
          - os: macos-latest
            label: osx-64
            prefix: /Users/runner/miniconda3/envs/biorbd_casadi
    name: ${{ matrix.label }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v2
      
      - name: Get number of CPU cores
        uses: SimenB/github-actions-cpu-cores@v1
        id: cpu-cores

      - name: Setup environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-variant: Mambaforge
          miniforge-version: latest
          use-mamba: true
        
      - name: Print mamba info
        run: | 
          mamba config --show
          mamba info
          mamba list
          
      - name: Install dependencies
        run: | 
          mamba install cmake git pkgconfig octave -cconda-forge
          mamba list

      - name: Build biorbd
        run: |
          MAIN_FOLDER=`pwd`
          cd
          HOME=`pwd`
          cd $MAIN_FOLDER
          CONDA_ENV_PATH=$CONDA/envs/ezc3d
          mkdir -p $MAIN_FOLDER/$BUILD_FOLDER
          cd $MAIN_FOLDER/$BUILD_FOLDER
          cmake -DCMAKE_INSTALL_PREFIX=$CONDA_ENV_PATH -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTS=OFF -DBUILD_DOC=OFF -DBUILD_EXAMPLE=OFF -DUSE_MATRIX_FAST_ACCESSOR=OFF -DBINDER_OCTAVE=ON -DOctave_ezc3d_INSTALL_DIR=$HOME -DBINDER_PYTHON3=ON ..
          make install -j${{ steps.cpu-cores.outputs.count }}
          cd $MAIN_FOLDER
      

      - name: Run the Octave binder tests
        run: |
          MAIN_FOLDER=`pwd`
          cd
          HOME=`pwd`
          cd $MAIN_FOLDER/test/matlab
          cp $HOME/ezc3d_octave/* .
          octave test_binder_matlab.m
          octave test_binder_matlab_force_platform.m
          cd $MAIN_FOLDER
